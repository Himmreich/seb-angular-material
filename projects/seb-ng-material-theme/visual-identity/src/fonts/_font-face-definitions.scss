@import "../mixins";
// Default base path for fonts
$sebvi-font-basepath: 'projects/seb-ng-material-theme/visual-identity/src/fonts/' !default;


// Make a font-face for each font variation
// Usage: input a map with a structure like this:
// $fonts: (
//     name: 'Font2',
//     weights: (
//       light: (normal, italic),
//       normal: (normal, italic),
//       medium: (normal, italic),
//       bold: (normal, italic)
//     )
// );
// Filenames will be generated if the form Font1-Bold, Font1-BoldItalic, and so on
@mixin sebvi-make-font-faces($font) {

  // This is how weights map to filename
  $_weights_filename_map: (
    200: 'Light',
    normal: 'Regular',
    500: 'Medium',
    bold: 'Bold'
  )!default;

  // This is how styles map to filename
  $_styles_filename_map: (
    normal: '',
    italic: 'Italic'
  )!default;

  @each $weight, $styles in map-get($font, 'weights') {
    @each $style in $styles {
      $name: map-get($font, 'name');
      $filename: map-get($font, 'name') + '-' + map-get($_weights_filename_map, $weight) + map-get($_styles_filename_map, $style);
      @include _make-font-face($name, $filename, $weight, $style);
    }
  }

}

// Output a font-face definition based on the input
@mixin _make-font-face($name, $filename, $weight, $style) {
  @include _sebvi-exports('sebvi-font-' + $name + '-' + $weight + '-' + $style) {
    @font-face
    {
      font-family: $name;
      src: url($sebvi-font-basepath + $filename + '.woff2') format('woff2'),
          url($sebvi-font-basepath + $filename + '.woff') format('woff'); // sass-lint:disable-line indentation
      font-weight: $weight;
      font-style: $style;
    }
  }
}
